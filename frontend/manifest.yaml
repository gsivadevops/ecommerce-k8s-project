# configmap - pod env variables
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: roboshop
  labels:
    component: frontend
    project: roboshop
    tier: web
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /run/nginx.pid;

    include /usr/share/nginx/modules/*.conf;

    events {
        worker_connections 1024;
    }

    http {
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile            on;
        tcp_nopush          on;
        keepalive_timeout   65;
        types_hash_max_size 4096;

        include             /etc/nginx/mime.types;
        default_type        application/octet-stream;

        include /etc/nginx/conf.d/*.conf;

        server {
            listen       8080;
            listen       [::]:8080;
            server_name  _;
            root         /usr/share/nginx/html;

            include /etc/nginx/default.d/*.conf;

            error_page 404 /404.html;
            location = /404.html {
            }

            error_page 500 502 503 504 /50x.html;
            location = /50x.html {
            }

            location /images/ {
              expires 5s;
              root   /usr/share/nginx/html;
              try_files $uri /images/placeholder.jpg;
            }
            location /api/catalogue/ { proxy_pass http://catalogue:8080/; }
            location /api/user/ { proxy_pass http://user:8080/; }
            location /api/cart/ { proxy_pass http://cart:8080/; }
            location /api/shipping/ { proxy_pass http://shipping:8080/; }
            location /api/payment/ { proxy_pass http://payment:8080/; }

            location /health {
              stub_status on;
              access_log off;
            }

        }
    }

---
# Deployment Resource
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: roboshop
  # deployment labels, helps to organize and select resources.
  labels:
    component: frontend
    project: roboshop
    tier: web
# Deployment spec     
spec:
  # 1 pod replica
  replicas: 1
  # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      component: frontend
      project: roboshop
      tier: web
  # This is pod definition
  template:
    metadata:
      labels:
        component: frontend
        project: roboshop
        tier: web
    spec:
      containers:
      - name: frontend
        image: gsivadvops/frontend:v1
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
---
# service resource used to expose pods
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: roboshop
  # service labels, helps to organize and identify this service
  labels:
    component: frontend
    project: roboshop
    tier: web
# service spec 
spec:
  type: LoadBalancer
  # Matches pods with the same labels (so service knows which pods to send traffic to)
  selector:
    component: frontend
    project: roboshop
    tier: app
  ports:
  - protocol: TCP
    port: 80 # service port, what clients use
    targetPort: 8080 # container port inside pod 