apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: roboshop
  # deployment labels
  labels:
    component: mysql
    project: roboshop
    tier: database
spec:
  replicas: 1
  # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      component: mysql
      project: roboshop
      tier: database
  # This is pod definition
  template:
    metadata:
      labels:
        component: mysql
        project: roboshop
        tier: database
    spec:      
      serviceAccount: roboshop-mysql-secret-reader
      # setting volume with emptyDir at spec level - to store  the secret and access it in the containers inside pod
      volumes:
      - name: mysql-secret
        emptyDir: {}
      # setting main container  
      containers:
      - name: mysql
        image: joindevops/mysql:v2
        imagePullPolicy: Always
        # mounting the volume 'mysql'-secret' with'/tmp' directory to access the init container from main container
        volumeMounts:
        - mountPath: /tmp
          name: mysql-secret
      # InitContainer - to fetch the secret from Secret manager and store that in file
      initContainers:
      - name: fetch-secret
        image: amazon/aws-cli 
        # storing the mysql secret to /tmp/mysql_root_password.txt file
        command:
        - sh
        - -c
        - |
            aws secretsmanager get-secret-value --secret-id roboshop/mysql/password --query SecretString --output text | jq -r .MYSQL_ROOT_PASSWORD > /tmp/mysql_root_password.txt
        # mounting the volume 'mysql'-secret' with'/tmp' directory to access in main container
        volumeMounts:
        - mountPath: /tmp
          name: mysql-secret
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: roboshop
  labels:
    component: mysql
    project: roboshop
    tier: database
spec:
  selector:
    component: mysql
    project: roboshop
    tier: database
  ports:
  - protocol: TCP
    port: 3306 # service port
    targetPort: 3306 # container port